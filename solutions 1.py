import sys 
# для второго задания, дабы обойти лимит на глубину рекурсии 
# можно, конечно, сообразить, что F(2023)/F(2020) в данном случае = 2023*2022*2021, но это не наш вариант
sys.setrecursionlimit(4000)


def ex1():
    def alg(N):
        Nbin = bin(N)[2:] ## конвертация исходного числа в двоичное с отбрасыванием префикса двоичной записи
        if N % 3 == 0: ## условие а
            Rbin = Nbin+Nbin[-3:] ## выполнение правила а, добавление к строке, содержащей двоичную запись N её последних трёх символов
        else:
            rembin = bin(N % 3)[2:] ## конвертация остатка в двоичное с отбрасыванием префикса двоичной записи
            Rbin = Nbin + rembin
        R = int(Rbin, 2) ## конвертация в десятичное число из двоичного
        return(R)
    ans = 0
    counter = 1 ## из-за малых требуемых значений сойдёт и перебор без анализа
    while ans < 76: ## перебор изначальных значений до тех пор, пока искомое число не начнёт подпадать под требуемое условие
        counter += 1
        ans = alg(counter)
    print(counter)


def ex2():
    def F(n):   ## репликация условий в виде функции
        if n == 1:
            return(1)
        elif n > 1:
            return(n * F(n - 1))
    print(int(F(2023)/F(2020)))


def ex3(): ## "... не превышающие 1010..." - полагаю, что это 10^10, тогда максимум разрядов - 10 (т.к. число 10^10 не кратно 4891)
    answer = []
    num = "1?7602*0" ## число разрядов = 7 + кол-во разрядов в * <= 10 => * принадлежит промежутку от нуля до 999
    for x in range (0, 10): ## замена ? на значения 0-9
        ansstr = num.replace('?', str(x))
        for y in range (0, 1000): ## замена * на значения 0-999
            ansstrfin = ansstr.replace("*", str(y))
            if y == 0:  ## на этом моменте я понял, что начал не с того. стоило разбить на разряды и работать так, однако, пусть и громоздко, но работает
                for n in range(1, 3):   ## перебор количества нулей (т.к. десятичное число по умолчанию не подразумевает наличие более чем одного разрядного нуля в числе, равном нулю)
                    finalcheck = ansstrfin + '0'*n
                    if int(finalcheck) % 4891 == 0: ## проверка чисел, в которых за * находится несколько нулей
                        answer.append(int(finalcheck))  
            elif int(ansstrfin) % 4891 == 0: ## *стандартная* проверка делимости
                answer.append(int(ansstrfin))
        check = ansstr.replace("*", "") ## проверка случая, когда за * нет числа
        if int(check) % 4891 == 0:
            answer.append(int(check))
    print(sorted(answer)) ## вывод отсортированного по возрастанию ответа