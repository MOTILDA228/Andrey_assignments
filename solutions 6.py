def ex1():
    # пойдём с конца. т.к. ответ должен принадлежать промежутку от 107 до 170, скорее всего, обе операции производились со второй кучей, т.к. в иных случаях S будет наибольшим
    # тогда, избавимся от первой кучи: 107-5=102. 102 < 4S or 2(S+10) or 10 + 2S or S + 20. очевидно, подходит 102 < 4S, S принадлежит множеству целых чисел, тогда S = 104/4 = 26.
    print('26')
def ex1_2():
    # 1 часть:
    #    не совсем ясны условия. если ваня ДОЛЖЕН совершить первый ход, значит победа петра была на втором его ходу, что аналогично второй части задания
    # 2 часть:
    #    надо рассматривать условия, при которых за 2 хода победить невозможно, а за три это гарантированно
    #    тогда, чтобы победа была гарантированной, следует рассматривать граничные значения: пётр дважды удваивает вторую кучу, а ваня удваивает первую (минимум) (в случае, если пётр взаимодействует с первой кучей, S явно не минимальное)
    #    в таком случае, 107 - 10 = 97, 97 < 4S, тогда S = 25. при этом в случае менее удобного для данного примера выбора вани (после удвоения петей второй кучи удвоить её снова), пётр может совершить любой другой ход (удвоение первой/+10), не выходя за промежуток (102, 171)
    print(None, '25')
def ex1_3():
    # т.е. победа за один ход не гарантированна, но возможна, а за два - гарантированна. снова, из-за условия про гарантированность победы, взаимодействия вани производились со вторым числом, иначе S явно не минимально
    # наиболее невыгодные по росту общего количества камней выборы пети: удвоить первую кучу и удвоить/добавить к ней 10 камней, тогда ходы вани были бы удвоить вторую кучу дважды
    # 107 - 20 = 87, S = 22. при иных выборах петра ваня просто изменит стратегию, но в таком случае невозможна победа за 1 ход (22*2*2 = 88, 88 + 5 < 103), следовательно S  = 22 + (107-103)/4 = 23
    print('23')
def ex2():
    # идентичное (по всем числовым значениям, заменам и модели) задание было в прошлом файле
    print('68')