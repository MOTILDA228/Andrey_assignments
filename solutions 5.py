def ex1(): # при проверке решения перебором обнаружил, что количество слов = 2 * (длина = номер числа в посл. фиббоначи)
    x, y = 1, 0
    for num in range(1, 20):
        x, y = x + y, x
    print(2 * x) # с решением перебором ответ сходится
def ex2():
    # по сути, в данной задаче 0 с первой позиции каждое замещение сдвигается вправо на 1-2 позиции, при этом взаино заменяя 1х на 2y, а 1y на 2x
    # самая эффективная "стратегия" в данном случае - нечётное кол-во 1 и чётное кол-во 2 с возможностью повтора данной комбинации (т.к. она гарантированно встретится не 1 раз в нужных нам случаях)
    # говоря предметно, это будет 22122111 = 1221222
    # в таком случае в строке б с определённого момента будет соотношение единиц к двойкам 2:5
    # тогда, пусть K - количество пар-"заполнителей" 1 и 2 в строке а, позволяющих набрать равное число единиц и двоек в строке б
    # T - количество указанных тремя строками выше комбинаций ( т.е. строка принимает вид K * '1122' + T * 1221222)
    # в таком случае, мы получаем систему уравнений: K + 2T = 47 and K + 5T < 70, T in Z, K in range(1, 48), lim(T)->∞
    # решаем систему вычитанием уравнения из неравенства:
    # K + 5T - K - 2T < 70 - 47, 3T < 23. т.к. T стремится к бесконечности, является целым и менее 7,(6), T = 7
    # из уравнение находим K: K = 47 - 14 = 33
    # избавляется от неравенства и находим количество двоек в строке б: K + 5T = 33 + 35 = 68
    # в данном случае т.к. количество 1 и 2 в ключевой (повторяющейся) комбинации целое, вариант, при котором будет возможно набрать 69, невозможен, т.к. соотношение лимитировано [47:69: 2:5],
    # и любые иные комбинации не позволят набрать 69 (что можно проверить перебором для уравнения выше, где количество T будет меняться путём цикла с перебором значений (условно) 1-47:1-69
    print('68')
def ex3():
    ctr = 0
    for a in range(1, 11112):
        check = True
        for x in range(2, a):
            if a % x == 0: # у дизъюнкции приоритет больше, чем у импликации, следовательно рассматриваем выражением: a%x → (x==a или x ==1), следовательно подходят лишь простые числа (выражение ложно только если x%a == 0, и x != a,1)
                check = False
                break
        if check:
            ctr+=1
    print(ctr)